[{"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/index.js":"1","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/serviceWorker.js":"2","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/App.js":"3","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Login.js":"4","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Main.js":"5","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Drawer.js":"6","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/constants.js":"7","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/ImgBin.js":"8","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/SignUp.js":"9","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardCointainer.js":"10","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardsList.js":"11","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/CreateBoard.js":"12","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/UploadPane.js":"13"},{"size":801,"mtime":1607484686414,"results":"14","hashOfConfig":"15"},{"size":5086,"mtime":1607484686414,"results":"16","hashOfConfig":"15"},{"size":1706,"mtime":1607484686411,"results":"17","hashOfConfig":"15"},{"size":2518,"mtime":1607484686412,"results":"18","hashOfConfig":"15"},{"size":2823,"mtime":1607628458275,"results":"19","hashOfConfig":"15"},{"size":3639,"mtime":1607628291336,"results":"20","hashOfConfig":"15"},{"size":40,"mtime":1607484686413,"results":"21","hashOfConfig":"15"},{"size":9926,"mtime":1607614386306,"results":"22","hashOfConfig":"15"},{"size":3060,"mtime":1607484686413,"results":"23","hashOfConfig":"15"},{"size":2956,"mtime":1607628809005,"results":"24","hashOfConfig":"15"},{"size":1013,"mtime":1607632361727,"results":"25","hashOfConfig":"15"},{"size":1175,"mtime":1607614471676,"results":"26","hashOfConfig":"15"},{"size":1655,"mtime":1607484686413,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"9jaiwo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/index.js",[],["60","61"],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/serviceWorker.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/App.js",["62","63","64"],"import React from 'react';\nimport './App.css';\nimport Main from './Main'\nimport Login from './Login'\nimport Drawer from './Drawer'\nimport { Switch, Route} from 'react-router-dom'\nclass App extends React.Component {\n  // state = {\n\t\t// user: null,\n  // };\n\n  // componentDidMount(){\n  //   const token = localStorage.getItem('token')\n  //   if(token){\n  //     fetch('http://localhost:3000/api/v1/profile', {\n  //       method: 'GET',\n  //       headers: { Authorization: `Bearer ${token}`},\n  //     }).then(response => response.json())\n  //     .then(theUser => {\n  //       this.setState({\n  //         user: theUser\n  //       })\n  //     })\n  //   } else {\n  //     this.setState({\n  //       user: null\n  //     })\n  //   }\n  // }\n  \n  loginHandler = (userInfo) => {\n    fetch('http://localhost:3000/api/v1/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\",\n      },\n      body: JSON.stringify({ user: userInfo })\n    })\n      .then(resp => resp.json())\n      .then(theUser => {\n        // if(theUser.message !== 'Invalid username or password') {\n          localStorage.setItem('token', theUser.jwt)\n          this.setState({\n            user: theUser\n          })\n        // }\n      })\n  }\n\n\n\n  render() {\n\t\treturn (\n      <>\n        {/* { this.state.user ? */}\n          <>\n            \n            \n          <Route path='/' exact render={() => <Main/>}/>\n            \n            {/* user={this.state.user} */}\n            \n          </>\n          {/* : */}\n          {/* <Login signupHandler={this.signupHandler} loginHandler={this.loginHandler} />}\n       */}\n        </>\n        );\n      }\n}\n\nexport default App;\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Login.js",["65","66","67","68","69","70"],"import React from 'react';\nimport SignUp from './SignUp';\nimport {\n\tPaper,\n\tTextField,\n\tButton,\n\tTypography,\n\tCard,\n\tCardContent,\n\tCardMedia,\n\tCardActionArea,\n} from '@material-ui/core';\n\nclass Login extends React.Component {\n\tstate = {\n\t\tclicked: false,\n\t\tusername: '',\n\t\tpassword: '',\n\t};\n\n\tclickHandler = () => {\n\t\tlet previous = this.state.clicked;\n\t\tthis.setState({\n\t\t\tclicked: !previous,\n\t\t});\n\t};\n\n\tchangeHandler = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tsubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.loginHandler({\n\t\t\tusername: this.state.username,\n\t\t\tpassword: this.state.password,\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={form}>\n\t\t\t\t<Card elevation={12}>\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t{this.state.clicked ? (\n\t\t\t\t\t\t\t<SignUp signupHandler={this.props.signupHandler} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div style={childForm}>\n\t\t\t\t\t\t\t\t\t<form style={formForm} onSubmit={this.submitHandler}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tstyle={submitBtn}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tstyle={signUp}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Sign up\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.clickHandler}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNew User? Sign Up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Paper>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n\nconst form = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\tmarginTop: '15vh',\n};\n\nconst childForm = {\n\twidth: '60vh',\n\tpadding: '10px',\n};\n\nconst formForm = {\n\tpadding: '20px',\n};\n\nconst submitBtn = {\n\tmarginTop: '1vh',\n\tfloat: 'right',\n\tmarginRight: '2vw',\n\twidth: '15vw',\n};\n\nconst loginImg = {\n\theight: 0,\n\tpaddingTop: '56.25%',\n\tmarginTop: '30',\n};\n\nconst signUp = {\n\tmarginTop: '5vh',\n\tmarginRight: 'auto',\n\tmarginLeft: 'auto',\n\twidth: '100%',\n};\n\nconst title = {\n\tmarginTop: '2vh',\n};\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Main.js",["71"],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Drawer.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/constants.js",["72"],"const baseURL = 'http://localhost:3000/'","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/ImgBin.js",["73","74","75","76","77"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport './style.css';\nimport { Image, Stage, Layer, Transformer, Rect } from 'react-konva';\nimport useImage from 'use-image';\nimport { Button } from '@material-ui/core';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Paper from '@material-ui/core/Paper';\n\nconst ImgBin = (props) => {\n\tconst dragUrl = useRef();\n\tconst dragId = useRef();\n\tconst stageRef = useRef();\n\tconst [images, setImages] = useState([]);\n\n\t//\n\t// LOAD BOARDS\n\t//\n\tuseEffect(() => {\n\t\t// setImages([]);\n\t\tfetch(`http://localhost:3000/boards/${props.board}`)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((boardImgArray) => {\n\t\t\t\tfindImgUrlID(boardImgArray.board_images);\n\t\t\t});\n\t\tconst findImgUrlID = (boardImgArray) => {\n\t\t\tfetch(`http://localhost:3000/images`)\n\t\t\t\t.then((resp) => resp.json())\n\t\t\t\t.then((imgList) => {\n\t\t\t\t\tfindMatches(imgList, boardImgArray);\n\t\t\t\t});\n\t\t};\n\n\t\tconst findMatches = (imgList, boardImgArray) => {\n\t\t\tlet i = 0;\n\t\t\tlet newState = [];\n\t\t\tif (boardImgArray) {\n\t\t\t\twhile (i < boardImgArray.length) {\n\t\t\t\t\tconst imgMatch = imgList.find(\n\t\t\t\t\t\t(img) => img.id === boardImgArray[i].image_id\n\t\t\t\t\t);\n\t\t\t\t\tconst newStateObj = {\n\t\t\t\t\t\tx: boardImgArray[i].x,\n\t\t\t\t\t\ty: boardImgArray[i].y,\n\t\t\t\t\t\tsrc: imgMatch.src,\n\t\t\t\t\t\tid: imgMatch.id,\n\t\t\t\t\t\twidth: boardImgArray[i].width,\n\t\t\t\t\t\theight: boardImgArray[i].height,\n\t\t\t\t\t};\n\t\t\t\t\tnewState.push(newStateObj);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetImages(newState);\n\t\t};\n\t}, [props.board]);\n\t// ////////////////////////////////////\n\n\tconsole.log('Images State: ', images);\n\t//\n\t// SAVE IMAGES W/ LOCATION\n\t//\n\tconst prepImgsForSave = () => {\n\t\timages.forEach((img) => findBoardImageId(img.id, img));\n\t};\n\n\tconst findBoardImageId = (imgId, stateImg) => {\n\t\tfetch('http://localhost:3000/board_images/', {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((boardImgArray) => {\n\t\t\t\tconst boardImage = boardImgArray.find(\n\t\t\t\t\t(boardImg) =>\n\t\t\t\t\t\tboardImg.image_id === imgId && boardImg.board_id === props.board\n\t\t\t\t);\n\t\t\t\tif (boardImage) {\n\t\t\t\t\tsaveImgBoardState(boardImage.id, stateImg);\n\t\t\t\t} else {\n\t\t\t\t\tcreateImageAssociation(imgId, stateImg);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst createImageAssociation = (imgId, stateImg) => {\n\t\tfetch('http://localhost:3000/board_images/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\taccepts: 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tboard_id: props.board,\n\t\t\t\timage_id: imgId,\n\t\t\t\tx: stateImg.x,\n\t\t\t\ty: stateImg.y,\n\t\t\t\twidth: stateImg.width,\n\t\t\t\theight: stateImg.height,\n\t\t\t}),\n\t\t});\n\t};\n\n\tconst saveImgBoardState = (boardImgId, stateImg) => {\n\t\tfetch(`http://localhost:3000/board_images/${boardImgId}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\taccepts: 'application/json',\n\t\t\t\t// Authorization: `Bearer ${token}`,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tx: stateImg.x,\n\t\t\t\ty: stateImg.y,\n\t\t\t\twidth: stateImg.width,\n\t\t\t\theight: stateImg.height,\n\t\t\t}),\n\t\t}).then((resp) => resp.json());\n\t};\n\t// ////////////////////////////////////\n\n\tconst downloadURI = (uri, name) => {\n\t\tconst link = document.createElement('a');\n\t\tlink.download = name;\n\t\tlink.href = uri;\n\t\tdocument.body.appendChild(link);\n\t\tlink.click();\n\t\tdocument.body.removeChild(link);\n\t};\n\n\tconst downloadBoard = (e) => {\n\t\te.preventDefault();\n\n\t\tconst dataURL = stageRef.current.toDataURL({\n\t\t\tmimeType: 'image/jpeg',\n\t\t\tquality: 1,\n\t\t\tpixelRatio: 2,\n\t\t});\n\t\tdownloadURI(dataURL, 'MoodBoard');\n\t};\n\n\tconst URLImage = ({ image, shapeProps, isSelected, onSelect, onChange }) => {\n\t\tconst [img] = useImage(image.src, 'Anonymous');\n\n\t\tconst shapeRef = useRef();\n\t\tconst trRef = useRef();\n\n\t\tuseEffect(() => {\n\t\t\tif (isSelected) {\n\t\t\t\t// attach transformer\n\t\t\t\ttrRef.current.setNode(shapeRef.current);\n\t\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t\t}\n\t\t}, [isSelected]);\n\t\tuseLayoutEffect(() => {\n\t\t\tshapeRef.current.cache();\n\t\t}, [shapeProps, img, isSelected]);\n\n\t\tconsole.log('ShapeRef: ', shapeRef);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Image\n\t\t\t\t\timage={img}\n\t\t\t\t\tonClick={onSelect}\n\t\t\t\t\tref={shapeRef}\n\t\t\t\t\t{...shapeProps}\n\t\t\t\t\tx={image.x}\n\t\t\t\t\ty={image.y}\n\t\t\t\t\toffsetX={img ? img.width / 2 : 0}\n\t\t\t\t\toffsetY={img ? img.height / 2 : 0}\n\t\t\t\t\tid=\"rect1\"\n\t\t\t\t\t// use id to remove from state\n\t\t\t\t\tid={image.id}\n\t\t\t\t\tdraggable\n\t\t\t\t\tonDragEnd={(e) => {\n\t\t\t\t\t\tconst stateIdx = images.findIndex(\n\t\t\t\t\t\t\t(img) => img.src === e.target.attrs.image.currentSrc\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newPos = e.target._lastPos;\n\t\t\t\t\t\tnewPos.src = e.target.attrs.image.currentSrc;\n\t\t\t\t\t\tconsole.log(images[stateIdx])\n\t\t\t\t\t\timages[stateIdx] = newPos;\n\t\t\t\t\t\tonChange({\n\t\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\t\ty: e.target.y(),\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\t// changing the scale but storing as width and height\n\t\t\t\t\tonTransformEnd={(e) => {\n\t\t\t\t\t\tconst node = shapeRef.current;\n\t\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t\t// set scale back\n\t\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\t\tnode.width(Math.max(5, node.width() * scaleX));\n\t\t\t\t\t\tnode.height(Math.max(node.height() * scaleY));\n\n\t\t\t\t\t\tonChange({\n\t\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\t\t// set minimal value\n\t\t\t\t\t\t\twidth: node.width(),\n\t\t\t\t\t\t\theight: node.height(),\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{isSelected && (\n\t\t\t\t\t<Transformer\n\t\t\t\t\t\trotateEnabled={false}\n\t\t\t\t\t\tref={trRef}\n\t\t\t\t\t\tboundBoxFunc={(oldBox, newBox) => {\n\t\t\t\t\t\t\t// limit resize\n\t\t\t\t\t\t\tif (newBox.width < 5 || newBox.height < 5) {\n\t\t\t\t\t\t\t\treturn oldBox;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn newBox;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t};\n\n\tconst renderImages = () => {\n\t\treturn props.images.map((img) => {\n\t\t\treturn (\n\t\t\t\t<div style={imgList}>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\twidth=\"125vw\"\n\t\t\t\t\t\tid={img.id}\n\t\t\t\t\t\tsrc={img.src}\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t// onDblClick={onSelect}\n\t\t\t\t\t\tonDragStart={(e) => {\n\t\t\t\t\t\t\tdragUrl.current = e.target.src;\n\t\t\t\t\t\t\tdragId.current = parseInt(e.target.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={removeButtons}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\taria-label=\"remove\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tconst imgId = parseInt(e.currentTarget.id);\n\t\t\t\t\t\t\t\tconsole.log(imgId);\n\t\t\t\t\t\t\t\tprops.removeImageFromBoard(imgId);\n\t\t\t\t\t\t\t\tconst newArray = images.filter((image) => image.id !== imgId);\n\t\t\t\t\t\t\t\tsetImages(newArray);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tid={img.id}\n\t\t\t\t\t\t\tlabel=\"Remove\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tconsole.log(e.currentTarget.id);\n\t\t\t\t\t\t\t\tconst imgId = parseInt(e.currentTarget.id);\n\t\t\t\t\t\t\t\tprops.removeImage(imgId);\n\t\t\t\t\t\t\t\tconsole.log(imgId);\n\t\t\t\t\t\t\t\tconst newArray = images.filter((image) => image.id !== imgId);\n\t\t\t\t\t\t\t\tsetImages(newArray);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tid={img.id}\n\t\t\t\t\t\t\tlabel=\"Remove\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst [selectedId, selectShape] = useState(null);\n\treturn (\n\t\t<div>\n\t\t\t<br />\n\t\t\t<div style={{ marginLeft: '2vw' }} />\n\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t<div style={imgs}>{renderImages()}</div>\n\t\t\t</Paper>\n\t\t\t<div\n\t\t\t\tstyle={maybeDiv}\n\t\t\t\tonDrop={(e) => {\n\t\t\t\t\t// register event position\n\t\t\t\t\tstageRef.current.setPointersPositions(e);\n\t\t\t\t\t// add image\n\t\t\t\t\tsetImages(\n\t\t\t\t\t\timages.concat([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...stageRef.current.getPointerPosition(),\n\t\t\t\t\t\t\t\tsrc: dragUrl.current,\n\t\t\t\t\t\t\t\tid: dragId.current,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\tonDragOver={(e) => e.preventDefault()}\n\t\t\t>\n\t\t\t\t<div style={buttonsContainer}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsiz=\"large\"\n\t\t\t\t\t\tlabel=\"save\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={prepImgsForSave}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Changes\n\t\t\t\t\t</Button>\n\t\t\t\t\t<div style={buttonSep} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tlabel=\"download\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={downloadBoard}\n\t\t\t\t\t>\n\t\t\t\t\t\tDownload Board\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Paper elevation={2}>\n\t\t\t\t\t<Stage\n\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\theight={window.innerHeight}\n\t\t\t\t\t\tstyle={stage}\n\t\t\t\t\t\tref={stageRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t<Rect\n\t\t\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\t\t\theight={window.innerHeight}\n\t\t\t\t\t\t\t\tfill=\"white\"\n\t\t\t\t\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\t\t\t\t\tconst clickedOnEmpty = e.target.attrs.fill === 'white';\n\t\t\t\t\t\t\t\t\tif (clickedOnEmpty) {\n\t\t\t\t\t\t\t\t\t\tconsole.log('clicked on empty');\n\t\t\t\t\t\t\t\t\t\tselectShape(null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{images.map((img, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<URLImage\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\timage={img}\n\t\t\t\t\t\t\t\t\t\tshapeProps={img}\n\t\t\t\t\t\t\t\t\t\tisSelected={img.id === selectedId}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tselectShape(img.id);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={(newAttrs) => {\n\t\t\t\t\t\t\t\t\t\t\tconst rects = images.slice();\n\t\t\t\t\t\t\t\t\t\t\trects[i] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tsetImages(rects);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ImgBin;\n\nconst imgBinDiv = {\n\t// border: '1px solid black',\n\t// justifyContent: 'center',\n\t// width: \"window.innerWidth\"\n};\n\nconst imgs = {\n\tdisplay: 'flex',\n\t// border: '1px solid orange',\n\toverflowX: 'scroll',\n\t// width: '40vw'\n\tmarginRight: '3vw',\n\tmarginLeft: '3vw',\n\talignItems: 'flex-end',\n\t// flexBasis: 'content'\n};\n\nconst imgList = {\n\tmarginRight: '2vw',\n};\n\nconst stage = {\n\t// border: '8px solid green',\n\t// width: 'window.innerWidth',\n\t// height: 'window.innerHeight'\n};\n\nconst maybeDiv = {\n\t// border: '1px solid red',\n\t// width: 'window.innerWidth - 1000',\n\t// height: 'window.innerHeight',\n};\n\nconst buttonSep = {\n\tflex: '1',\n};\n\nconst removeButtons = {\n\tdisplay: 'flex',\n\tjustifyContent: 'space-between',\n\tmarginBottom: '1vh',\n};\n\nconst buttonsContainer = {\n\tdisplay: 'flex',\n\tmarginLeft: '20vw',\n\tmarginRight: '20vw',\n\tmarginTop: '2vh',\n\tmarginBottom: '1.5vh',\n};\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/SignUp.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardCointainer.js",["78","79","80","81"],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardsList.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/CreateBoard.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/UploadPane.js",["82","83","84","85","86"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmargin: theme.spacing(1),\n\t\tdisplay: 'flex',\n\t\t// flexDirection: 'row',\n\t\t\n\t},\n\tremoveBtn: {\n\t\tmarginTop: '1.5vh',\n\t\tmarginLeft: '15vw',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'stretch'\n\t}\n}))\n\nexport default function UploadPane(props) {\n\tconst classes = useStyles()\n\tconst maxSize = 104576;\n\n\tconst handleUploadSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// const token = localStorage.getItem('token');\n\t\tconst files = e.target.files;\n\t\tconsole.log('Files: ', e.target.files);\n\t\tfor (const file of files) {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('img_src', file);\n\t\t\tfetch('http://localhost:3000/images', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// headers: {\n\t\t\t\t// Authorization: `Bearer ${token}`,\n\t\t\t\t// },\n\t\t\t\tbody: formData,\n\t\t\t})\n\t\t\t\t.then((resp) => resp.json())\n\t\t\t\t.then((newImage) => {\n\t\t\t\t\t// createBoardAssociation(newImage.id);\n\t\t\t\t\tprops.imgUploaded(newImage);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.removeBtn}>\n\t\t\t<label className={classes.removeBtn} htmlFor='image-upload'>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tid=\"image-upload\"\n\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\tonChange={handleUploadSubmit}\n\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t/>\n\n\t\t\t\t<Button className={classes.removeBtn} component='span' variant='contained'>\n\t\t\t\t\tUpload Images\n\t\t\t\t</Button>\n\t\t\t\t</label>\n\t\t</div>\n\t);\n}\n\nconst uploadDiv = {\n\t// flexDirection: 'column',\n\t// border: '1px solid black',\n};\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"96","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"97","line":7,"column":2,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"98","line":9,"column":2,"nodeType":"93","messageId":"94","endLine":9,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":10,"column":2,"nodeType":"93","messageId":"94","endLine":10,"endColumn":11},{"ruleId":"91","severity":1,"message":"100","line":11,"column":2,"nodeType":"93","messageId":"94","endLine":11,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":127,"column":7,"nodeType":"93","messageId":"94","endLine":127,"endColumn":15},{"ruleId":"91","severity":1,"message":"102","line":140,"column":7,"nodeType":"93","messageId":"94","endLine":140,"endColumn":12},{"ruleId":"91","severity":1,"message":"103","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":1,"column":7,"nodeType":"93","messageId":"94","endLine":1,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":40,"column":7,"nodeType":"107","messageId":"108","endLine":40,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":172,"column":6,"nodeType":"111","endLine":172,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":258,"column":8,"nodeType":"111","endLine":258,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":275,"column":8,"nodeType":"111","endLine":275,"endColumn":20},{"ruleId":"91","severity":1,"message":"112","line":380,"column":7,"nodeType":"93","messageId":"94","endLine":380,"endColumn":16},{"ruleId":"91","severity":1,"message":"113","line":2,"column":33,"nodeType":"93","messageId":"94","endLine":2,"endColumn":39},{"ruleId":"91","severity":1,"message":"114","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":19},{"ruleId":"91","severity":1,"message":"115","line":138,"column":7,"nodeType":"93","messageId":"94","endLine":138,"endColumn":19},{"ruleId":"91","severity":1,"message":"116","line":144,"column":7,"nodeType":"93","messageId":"94","endLine":144,"endColumn":16},{"ruleId":"91","severity":1,"message":"117","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"118","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"119","line":4,"column":22,"nodeType":"93","messageId":"94","endLine":4,"endColumn":30},{"ruleId":"91","severity":1,"message":"120","line":23,"column":8,"nodeType":"93","messageId":"94","endLine":23,"endColumn":15},{"ruleId":"91","severity":1,"message":"121","line":70,"column":7,"nodeType":"93","messageId":"94","endLine":70,"endColumn":16},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'loginImg' is assigned a value but never used.","'title' is assigned a value but never used.","'baseURL' is defined but never used.","'baseURL' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'imgBinDiv' is assigned a value but never used.","'Button' is defined but never used.","'CreateBoard' is defined but never used.","'boardListDiv' is assigned a value but never used.","'boardList' is assigned a value but never used.","'useState' is defined but never used.","'Dropzone' is defined but never used.","'useTheme' is defined but never used.","'maxSize' is assigned a value but never used.","'uploadDiv' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]