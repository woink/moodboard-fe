[{"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/index.js":"1","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/serviceWorker.js":"2","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/App.js":"3","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Login.js":"4","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Main.js":"5","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Drawer.js":"6","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/constants.js":"7","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/ImgBin.js":"8","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/SignUp.js":"9","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardCointainer.js":"10","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardsList.js":"11","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/CreateBoard.js":"12","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/UploadPane.js":"13"},{"size":804,"mtime":1607637923401,"results":"14","hashOfConfig":"15"},{"size":5086,"mtime":1607484686414,"results":"16","hashOfConfig":"15"},{"size":1706,"mtime":1607484686411,"results":"17","hashOfConfig":"15"},{"size":2518,"mtime":1607484686412,"results":"18","hashOfConfig":"15"},{"size":2823,"mtime":1607628458275,"results":"19","hashOfConfig":"15"},{"size":3713,"mtime":1607637806698,"results":"20","hashOfConfig":"15"},{"size":40,"mtime":1607484686413,"results":"21","hashOfConfig":"15"},{"size":9641,"mtime":1607637912702,"results":"22","hashOfConfig":"15"},{"size":3060,"mtime":1607484686413,"results":"23","hashOfConfig":"15"},{"size":2750,"mtime":1607633628957,"results":"24","hashOfConfig":"15"},{"size":1011,"mtime":1607632926634,"results":"25","hashOfConfig":"15"},{"size":1175,"mtime":1607614471676,"results":"26","hashOfConfig":"15"},{"size":1655,"mtime":1607484686413,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9jaiwo",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/index.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/serviceWorker.js",[],["62","63"],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/App.js",["64","65","66"],"import React from 'react';\nimport './App.css';\nimport Main from './Main'\nimport Login from './Login'\nimport Drawer from './Drawer'\nimport { Switch, Route} from 'react-router-dom'\nclass App extends React.Component {\n  // state = {\n\t\t// user: null,\n  // };\n\n  // componentDidMount(){\n  //   const token = localStorage.getItem('token')\n  //   if(token){\n  //     fetch('http://localhost:3000/api/v1/profile', {\n  //       method: 'GET',\n  //       headers: { Authorization: `Bearer ${token}`},\n  //     }).then(response => response.json())\n  //     .then(theUser => {\n  //       this.setState({\n  //         user: theUser\n  //       })\n  //     })\n  //   } else {\n  //     this.setState({\n  //       user: null\n  //     })\n  //   }\n  // }\n  \n  loginHandler = (userInfo) => {\n    fetch('http://localhost:3000/api/v1/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\",\n      },\n      body: JSON.stringify({ user: userInfo })\n    })\n      .then(resp => resp.json())\n      .then(theUser => {\n        // if(theUser.message !== 'Invalid username or password') {\n          localStorage.setItem('token', theUser.jwt)\n          this.setState({\n            user: theUser\n          })\n        // }\n      })\n  }\n\n\n\n  render() {\n\t\treturn (\n      <>\n        {/* { this.state.user ? */}\n          <>\n            \n            \n          <Route path='/' exact render={() => <Main/>}/>\n            \n            {/* user={this.state.user} */}\n            \n          </>\n          {/* : */}\n          {/* <Login signupHandler={this.signupHandler} loginHandler={this.loginHandler} />}\n       */}\n        </>\n        );\n      }\n}\n\nexport default App;\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Login.js",["67","68","69","70","71","72"],"import React from 'react';\nimport SignUp from './SignUp';\nimport {\n\tPaper,\n\tTextField,\n\tButton,\n\tTypography,\n\tCard,\n\tCardContent,\n\tCardMedia,\n\tCardActionArea,\n} from '@material-ui/core';\n\nclass Login extends React.Component {\n\tstate = {\n\t\tclicked: false,\n\t\tusername: '',\n\t\tpassword: '',\n\t};\n\n\tclickHandler = () => {\n\t\tlet previous = this.state.clicked;\n\t\tthis.setState({\n\t\t\tclicked: !previous,\n\t\t});\n\t};\n\n\tchangeHandler = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tsubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.loginHandler({\n\t\t\tusername: this.state.username,\n\t\t\tpassword: this.state.password,\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={form}>\n\t\t\t\t<Card elevation={12}>\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t{this.state.clicked ? (\n\t\t\t\t\t\t\t<SignUp signupHandler={this.props.signupHandler} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div style={childForm}>\n\t\t\t\t\t\t\t\t\t<form style={formForm} onSubmit={this.submitHandler}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tstyle={submitBtn}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tstyle={signUp}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Sign up\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.clickHandler}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNew User? Sign Up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Paper>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n\nconst form = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\tmarginTop: '15vh',\n};\n\nconst childForm = {\n\twidth: '60vh',\n\tpadding: '10px',\n};\n\nconst formForm = {\n\tpadding: '20px',\n};\n\nconst submitBtn = {\n\tmarginTop: '1vh',\n\tfloat: 'right',\n\tmarginRight: '2vw',\n\twidth: '15vw',\n};\n\nconst loginImg = {\n\theight: 0,\n\tpaddingTop: '56.25%',\n\tmarginTop: '30',\n};\n\nconst signUp = {\n\tmarginTop: '5vh',\n\tmarginRight: 'auto',\n\tmarginLeft: 'auto',\n\twidth: '100%',\n};\n\nconst title = {\n\tmarginTop: '2vh',\n};\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Main.js",["73"],"import React from 'react'\nimport UploadPane from './UploadPane'\nimport ImgBin from './ImgBin'\nimport { baseURL } from './constants'\nimport Drawer from './Drawer'\n\nclass Main extends React.Component {\n  state = {\n    images: [],\n    boardImages: [],\n    board: 1\n  }\n\n  loadBoard = id => {\n    this.setState({\n      board: parseInt(id)\n    })\n  }\n \n  componentDidMount = () => {\n    fetch(`http://localhost:3000/images`, {\n      method: 'GET',\n    })\n      .then((resp) => resp.json())\n      .then((upImages) => {\n        this.setState({\n          images: upImages,\n        });\n      });\n    \n    fetch(`http://localhost:3000/boards/${this.state.board}/`, {\n      method: \"GET\",\n    })\n      .then(resp => resp.json())\n      .then(boardImgs => {\n        this.setState({\n        boardImages: boardImgs.board_images\n      })\n    })\n  };\n\n  imgUploaded = obj => {\n    this.setState(() => (\n      { images: [...this.state.images, obj] }\n    ))\n  }\n\n  removeImage = imgId => {\n    console.log(imgId)\n    fetch(`http://localhost:3000/images/${imgId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      }\n    })\n      .then(() => {\n        this.componentDidMount()\n      })\n      .then(this.findImageBoardId(imgId))\n  }\n\n  findImageBoardId = imgId => {\n    fetch(`http://localhost:3000/board_images`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(boardImgArray => {\n        const stateBoardImgId = boardImgArray.find(boardImg => boardImg.image_id === imgId) \n        if (stateBoardImgId) {\n          this.removeBoardImage(stateBoardImgId.id, imgId)\n        }\n        console.log(\"Found BoardImage\", stateBoardImgId)\n        \n      })\n  }\n\n  removeBoardImage = (stateBoardImgId, imgId) => {\n    fetch(`http://localhost:3000/boards/${this.state.board}/board_images/${parseInt(stateBoardImgId)}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      }\n    })\n    console.log(this.state.images)\n      const newImgArray = this.state.images.filter(img => img.id !== imgId)\n    this.setState({\n        images: newImgArray\n    })\n    console.log(\"finished removing BoardImage\", this.state.images)\n  }\n\n  render() {\n    return (\n      <>\n        <Drawer loadBoard={this.loadBoard}/>\n\t\t\t\t<div>\n          <UploadPane board={this.state.board} user={this.state.user} imgUploaded={this.imgUploaded} />\n          <ImgBin board={this.state.board} removeImageFromBoard={this.findImageBoardId} boardImages={this.state.boardImages} images={this.state.images} removeImage={this.removeImage}/>\n        \n\t\t\t\t</div>\n      </>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/Drawer.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/constants.js",["74"],"const baseURL = 'http://localhost:3000/'","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/ImgBin.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/SignUp.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardCointainer.js",[],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/BoardsList.js",["75"],"import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\tjustifyContent: 'space-between'\n\t\t},\n\t},\n\tmoodTitle: {\n\t\tflexDirection: 'row',\n\t\tmarginLeft: '2vw',\n\t\tjustifyContent: 'space-between',\n\t\tflex: 1\n\t},\n\tremoveBtn: {\n\t\tbackgroundColor: 'red'\n\t}\n}));\n\nconst BoardsList = (props) => {\n\tconst classes = useStyles();\n\n\tconst clickHandler = (e) => {\n\t\tprops.loadBoard(e.target.parentElement.parentElement.parentElement.id);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Button className={classes.moodTitle} color=\"primary\" variant=\"contained\" onClick={clickHandler}>\n\t\t\t\t{props.title}\n\t\t\t</Button>\n\t\t\t<Button className={classes.removeBtn} className={classes.moodTitle} color=\"#ffebee\" variant=\"contained\" onClick={props.removeBoard}>\n\t\t\t\t<DeleteForeverIcon />\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default BoardsList;\n","/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/CreateBoard.js",[],["76","77"],"/Users/wardprice/Flatiron/code/Mod5/final/moodboard-fe/src/UploadPane.js",["78","79","80","81","82"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmargin: theme.spacing(1),\n\t\tdisplay: 'flex',\n\t\t// flexDirection: 'row',\n\t\t\n\t},\n\tremoveBtn: {\n\t\tmarginTop: '1.5vh',\n\t\tmarginLeft: '15vw',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'stretch'\n\t}\n}))\n\nexport default function UploadPane(props) {\n\tconst classes = useStyles()\n\tconst maxSize = 104576;\n\n\tconst handleUploadSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// const token = localStorage.getItem('token');\n\t\tconst files = e.target.files;\n\t\tconsole.log('Files: ', e.target.files);\n\t\tfor (const file of files) {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('img_src', file);\n\t\t\tfetch('http://localhost:3000/images', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// headers: {\n\t\t\t\t// Authorization: `Bearer ${token}`,\n\t\t\t\t// },\n\t\t\t\tbody: formData,\n\t\t\t})\n\t\t\t\t.then((resp) => resp.json())\n\t\t\t\t.then((newImage) => {\n\t\t\t\t\t// createBoardAssociation(newImage.id);\n\t\t\t\t\tprops.imgUploaded(newImage);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.removeBtn}>\n\t\t\t<label className={classes.removeBtn} htmlFor='image-upload'>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tid=\"image-upload\"\n\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\tonChange={handleUploadSubmit}\n\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t/>\n\n\t\t\t\t<Button className={classes.removeBtn} component='span' variant='contained'>\n\t\t\t\t\tUpload Images\n\t\t\t\t</Button>\n\t\t\t\t</label>\n\t\t</div>\n\t);\n}\n\nconst uploadDiv = {\n\t// flexDirection: 'column',\n\t// border: '1px solid black',\n};\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"87","severity":1,"message":"91","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":14},{"ruleId":"87","severity":1,"message":"92","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":7,"column":2,"nodeType":"89","messageId":"90","endLine":7,"endColumn":12},{"ruleId":"87","severity":1,"message":"94","line":9,"column":2,"nodeType":"89","messageId":"90","endLine":9,"endColumn":13},{"ruleId":"87","severity":1,"message":"95","line":10,"column":2,"nodeType":"89","messageId":"90","endLine":10,"endColumn":11},{"ruleId":"87","severity":1,"message":"96","line":11,"column":2,"nodeType":"89","messageId":"90","endLine":11,"endColumn":16},{"ruleId":"87","severity":1,"message":"97","line":127,"column":7,"nodeType":"89","messageId":"90","endLine":127,"endColumn":15},{"ruleId":"87","severity":1,"message":"98","line":140,"column":7,"nodeType":"89","messageId":"90","endLine":140,"endColumn":12},{"ruleId":"87","severity":1,"message":"99","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":17},{"ruleId":"87","severity":1,"message":"100","line":1,"column":7,"nodeType":"89","messageId":"90","endLine":1,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":35,"column":42,"nodeType":"103","endLine":35,"endColumn":71},{"ruleId":"83","replacedBy":"104"},{"ruleId":"85","replacedBy":"105"},{"ruleId":"87","severity":1,"message":"106","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"107","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"108","line":4,"column":22,"nodeType":"89","messageId":"90","endLine":4,"endColumn":30},{"ruleId":"87","severity":1,"message":"109","line":23,"column":8,"nodeType":"89","messageId":"90","endLine":23,"endColumn":15},{"ruleId":"87","severity":1,"message":"110","line":70,"column":7,"nodeType":"89","messageId":"90","endLine":70,"endColumn":16},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'loginImg' is assigned a value but never used.","'title' is assigned a value but never used.","'baseURL' is defined but never used.","'baseURL' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["111"],["112"],"'useState' is defined but never used.","'Dropzone' is defined but never used.","'useTheme' is defined but never used.","'maxSize' is assigned a value but never used.","'uploadDiv' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]